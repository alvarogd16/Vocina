!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e=e||self).rexglowfilterpipelineplugin=t()}(this,function(){"use strict";function f(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function r(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function e(e,t,n){return t&&r(e.prototype,t),n&&r(e,n),e}function i(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&n(e,t)}function s(e){return(s=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function n(e,t){return(n=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function a(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function c(o){var u=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],function(){})),!0}catch(e){return!1}}();return function(){var e,t,n,r=s(o);if(u){var i=s(this).constructor;e=Reflect.construct(r,arguments,i)}else e=r.apply(this,arguments);return t=this,!(n=e)||"object"!=typeof n&&"function"!=typeof n?a(t):n}}var t=Phaser.Renderer.WebGL.Pipelines.TextureTintPipeline,l=Phaser.Utils.Objects.GetValue,y=Phaser.Math.Clamp,o=function(){i(u,t);var o=c(u);function u(e,t,n){var r;f(this,u);var i=e.game;return(r=o.call(this,{game:i,renderer:i.renderer,fragShader:"\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n#define highmedp highp\n#else\n#define highmedp mediump\n#endif\nprecision highmedp float;\n\n// Scene buffer\nuniform sampler2D uMainSampler; \nvarying vec2 outTexCoord;\n\n// Effect parameters\nuniform float intensity;\n\nvoid main() {\n  vec4 front = texture2D(uMainSampler, outTexCoord);\n  vec4 sum = vec4(0);\n  for(int xx = -4; xx <= 4; xx++) {\n    for(int yy = -3; yy <= 3; yy++) {\n      float dist = sqrt(float(xx*xx) + float(yy*yy));\n      float factor = 0.0;\n      if (dist == 0.0) {\n        factor = 2.0;\n      } else {\n        factor = 2.0/abs(float(dist));\n      }\n      sum += texture2D(uMainSampler, outTexCoord + vec2(xx, yy) * 0.002) * factor;\n    }\n  }\n  \n  gl_FragColor = mix(front, sum, intensity);\n}\n"}))._intensity=0,i.renderer.addPipeline(t,a(r)),r.resetFromJSON(n),r}return e(u,[{key:"resetFromJSON",value:function(e){return this.setIntensity(l(e,"intensity",0)),this}},{key:"setIntensity",value:function(e){return this.intensity=e,this}},{key:"intensity",get:function(){return this._intensity},set:function(e){e=y(e,0,1),this._intensity!==e&&(this._intensity=e,this.setFloat1("intensity",e))}}]),u}();return function(){i(n,Phaser.Plugins.BasePlugin);var t=c(n);function n(e){return f(this,n),t.call(this,e)}return e(n,[{key:"start",value:function(){this.game.events.on("destroy",this.destroy,this)}},{key:"add",value:function(e,t,n){return new o(e,t,n)}}]),n}()});
